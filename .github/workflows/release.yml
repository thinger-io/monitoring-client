name: Release

on:
  push:
    branches: [ master,develop ]
#  workflow_run:
#    workflows: ["Build x86_64"]
#    branches: [ master ]
#    types:
#      - completed

jobs:
  release:
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ steps.extract_branch.outputs.branch }}

    - name: Get tag version
      run: | # official regex for semantic version: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
        #echo "tag_version=`grep -oE '(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?' run.sh | head -1`" >> $GITHUB_ENV
        tag_version=`grep -oE '(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?' run.sh | head -1`
        if [ ${{ steps.extract_branch.outputs.branch == 'develop' }} ]; then
            for i in {1..100}; do
                if [ `git tag --list | grep -q "${tag_version}-alpha.${i}"` -eq 0 ]; then
                    tag_version="${tag_version}-alpha.${i}"
                    break;
                fi
            done
        fi
        echo "tag_version=${tag_version}" >> $GITHUB_ENV

    - name: Check if tag already exists
      run: |
        #git fetch --prune --unshallow --tags
        git fetch --prune --tags
        if [ `git tag --list | grep -q ${{ env.tag_version }}` -ne 0 ]; then exit 1; fi

    - name: Tag repository with version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ env.tag_version }}

    - name: Get changelog body
      id: get_changelog
      run: |
        release_body=$(cat << EOF
        $(awk '/^## \[[0-9]+/ {flag=!flag; next} flag {print}' CHANGELOG.md)
        EOF
        )
        release_body="${release_body//'%'/'%25'}"
        release_body="${release_body//$'\n'/'%0A'}"
        release_body="${release_body//$'\r'/'%0D'}"
        echo "::set-output name=RELEASE_BODY::$release_body"

    - name: Set pre-release boolean
      id: is_prerelease
      run: |
        prerelease=false
        if [ ${{ steps.extract_branch.outputs.branch }} == 'develop' ]; then
            prerelease=true
        fi
        echo "::set-output name=prerelease::$prerelease"

    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        prerelease: ${{ steps.is_prerelease.outputs.prerelease }}
        tag: ${{ env.tag_version }}
        name: ${{ env.tag_version }}
        artifacts: "install/install_thinger_monitor.sh"
        body: |
          ${{ steps.get_changelog.outputs.RELEASE_BODY }}
