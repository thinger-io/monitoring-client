name: Release

on:
  push:
    branches: [ master,develop ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.branch }}

    - name: Get tag version
      run: | # official regex for semantic version: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
        echo "tag_version=`grep -oE '(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?' run.sh | head -1`" >> $GITHUB_ENV

    - name: Check if tag is for develop and if it already exists
      run: |
        git fetch --prune --tags
        if [ ${{ env.branch }} == 'develop' ]; then
            for i in {1..100}; do
                if [ `git tag --list | grep ${{ env.tag_version }}"-alpha.${i}" | wc -l` -eq 0 ]; then
                    tag_version=${{ env.tag_version }}"-alpha.${i}"
                    echo "tag_version=${tag_version}" >> $GITHUB_ENV
                    break;
                fi
            done
        elif [ `git tag --list | grep -q ${{ env.tag_version }}` -ne 0 ]; then exit 1; fi

    - name: Get changelog body
      run: |
        release_body=$(cat << EOF
        $(awk '/^## \[[0-9]+/,EOF' CHANGELOG.md | awk '(NR>1)' | awk '1;/^## \[[0-9]+/{exit}' | sed '$d')
        EOF
        )
        #release_body="${release_body//'%'/'%25'}"
        #release_body="${release_body//$'\n'/'%0A'}"
        #release_body="${release_body//$'\r'/'%0D'}"
        #echo "::set-output name=RELEASE_BODY::$release_body"
        echo "RELEASE_BODY=$release_body" >> $GITHUB_ENV

    - name: Set pre-release boolean
      run: |
        prerelease=false
        if [ ${{ env.branch }} == 'develop' ]; then
            prerelease=true
        fi
        #echo "::set-output name=prerelease::$prerelease"
        echo "prerelease=$prerelease" >> $GITHUB_ENV

    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        prerelease: ${{ env.prerelease }}
        commit: ${{ env.branch }}
        tag: ${{ env.tag_version }}
        name: ${{ env.tag_version }}
        token: ${{ secrets.GH_PAT }} # can't use GITHUB_TOKEN as it will not trigger additional events
        artifacts: "install/install_thinger_monitor.sh"
        body: |
          ${{ env.RELEASE_BODY }}

